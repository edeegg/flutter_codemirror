name: Build & Release

on:
  workflow_dispatch:

permissions:
  contents: write    # necessário para criar tags e releases via API

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # 1) Forçar JDK 11 (evita o erro “Unsupported class file major version 61”)
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: '11'

      - name: Check java version
        run: java -version

      # 2) Configurar Flutter
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '2.8.0'
          channel: 'stable'

      # 3) Instalar dependências Dart/Flutter
      - name: Install dependencies
        run: flutter pub get

      # 4) Decodificar arquivo .env
      - name: Decode .env
        run: echo "${{ secrets.FLUTTER_ENV }}" > ${{ github.workspace }}/.env
        env:
          FLUTTER_ENV: ${{ secrets.FLUTTER_ENV }}

      # 5) Build do APK (debug)
      - name: Build APK (debug)
        run: flutter build apk --debug

      # 6) Build do AppBundle (unsigned, em debug)
      - name: Build AppBundle (unsigned)
        run: flutter build appbundle --debug

      # 7) Criar/Atualizar Release no GitHub usando uma TAG gerada dinamicamente
      - name: Create/Update Release
        uses: ncipollo/release-action@v1
        with:
          # 7.1) Definindo tag_name com um padrão “v1.0.${{ github.run_number }}”.
          #      Você pode ajustar para usar outro esquema de versionamento.
          tag_name: v1.0.${{ github.run_number }}
          # 7.2) O “name” da release (opcional) pode ser igual à tag ou um texto mais amigável:
          name: Release v1.0.${{ github.run_number }}
          # 7.3) Mensagem de descrição da release (pode ficar em branco ou gerar notas automáticas)
          body: "Build automática gerada pelo GitHub Actions (run #${{ github.run_number }})."
          # 7.4) Quais artefatos serão anexados à release
          artifacts: |
            ${{ github.workspace }}/build/app/outputs/flutter-apk/*.apk
            ${{ github.workspace }}/build/app/outputs/bundle/*.aab
          allowUpdates: true
          makeLatest: true
          omitBodyDuringUpdate: true
          # Se você quiser gerar notas de release automáticas baseado nos commits:
          # generateReleaseNotes: true
