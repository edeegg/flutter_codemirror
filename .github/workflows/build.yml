name: Build & Release

on:
  workflow_dispatch:

permissions:
  contents: write    # necessário para criar tags e releases via API

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # -------------------------------------------------------------------
      # 1) Instalar JDK 11 explicitamente, para não usar o Java 17 padrão
      #    (que geraria o "Unsupported class file major version 61").
      # -------------------------------------------------------------------
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: '11'
      
      # (Opcional) Exibir qual JDK está ativo, para debug
      - name: Check java version
        run: java -version

      # -------------------------------------------------------------------
      # 2) Configurar Flutter (mantendo sua versão 2.8.0 / canal stable)
      # -------------------------------------------------------------------
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '2.8.0'
          channel: 'stable'

      # -------------------------------------------------------------------
      # 3) Recuperar dependências Dart/Flutter
      # -------------------------------------------------------------------
      - name: Install dependencies
        run: flutter pub get

      # -------------------------------------------------------------------
      # 4) Decodificar variáveis de ambiente (.env)
      # -------------------------------------------------------------------
      - name: Decode .env
        run: echo "${{ secrets.FLUTTER_ENV }}" > ${{ github.workspace }}/.env
        env:
          FLUTTER_ENV: ${{ secrets.FLUTTER_ENV }}

      # -------------------------------------------------------------------
      # 5) Build APK (debug)
      #    - Como é build em modo debug, não há necessidade de keystore.
      # -------------------------------------------------------------------
      - name: Build APK (debug)
        run: flutter build apk --debug

      # -------------------------------------------------------------------
      # 6) Build AppBundle (unsigned, em debug)
      #    - Gera .aab sem exigir keystore em modo debug.
      # -------------------------------------------------------------------
      - name: Build AppBundle (unsigned)
        run: flutter build appbundle --debug

      # -------------------------------------------------------------------
      # 7) Upload dos artefatos (.apk e .aab) para a Release
      # -------------------------------------------------------------------
      - name: Upload Artifact
        uses: ncipollo/release-action@v1
        with:
          artifacts: |
            ${{ github.workspace }}/build/app/outputs/flutter-apk/*.apk
            ${{ github.workspace }}/build/app/outputs/bundle/*.aab
          allowUpdates: true
          makeLatest: true
          omitBodyDuringUpdate: true
